{"config": {"lang": ["en"], "separator": "[\\s\\-]+", "pipeline": ["stopWordFilter"]}, "docs": [{"location": "content/", "title": "Introduction", "text": ""}, {"location": "content/#home-sweet-home", "title": "Home sweet home", "text": "<p>this is my personal place to collect knowledge. Some knowledge might be useful for others.</p> <p>I keep stuff here to remember hopefully. I am the real Captain Solaris and this is, what i know. This book is forked from the Blue Book.</p>"}, {"location": "content/archives/", "title": "Archives", "text": ""}, {"location": "content/archives/#tar", "title": "Tar", "text": ""}, {"location": "content/archives/#packen", "title": "Packen", "text": "<p>Unkomprimiert:</p> <pre><code>tar -cf archive.tar file1 file2\n</code></pre> <p>Gzip-Komprimiert und Verbose (z)</p> <pre><code>tar -cvzf tarball.tar file file\n</code></pre> <p>Bzip2-Komprimiert und Verbose (j)</p> <pre><code>tar -cvzf tarball.tar file file\n</code></pre> <p>Alle Dateien eines Verzeichnisses hinzuf\u00fcgen</p> <pre><code>tar -cvzf tarball.tar ./*\n</code></pre>"}, {"location": "content/archives/#datei-zu-tarball-hinzufugen", "title": "Datei zu Tarball hinzuf\u00fcgen", "text": "<pre><code>tar -rf tarball.tar newfile\n</code></pre>"}, {"location": "content/archives/#tar-datei-untersuchen", "title": "Tar Datei untersuchen", "text": "<pre><code>tar -tf tarball.tar\n</code></pre>"}, {"location": "content/archives/#tar-datei-entpacken", "title": "Tar Datei entpacken", "text": "<pre><code>tar -xf archive.tar\n</code></pre>"}, {"location": "content/archives/#gzip-komprimiertes-tar-archiv-entpacken", "title": "gzip komprimiertes Tar-Archiv entpacken", "text": "<pre><code>tar -xvzf tarball.tar\n</code></pre>"}, {"location": "content/archives/#gzip", "title": "GZIP", "text": "<p>Mit Gzip lassen sich nur einzelne Dateien komprimieren, deshalb wird immer erst mit tar gepakt und dann komprimiert.</p> <pre><code>gzip file1\n</code></pre> <p>Um die Datei nach dem Komprimieren nicht zu l\u00f6schen, </p> <pre><code>gzip -k file1\n</code></pre> <p>Entpacken und Behalten</p> <pre><code>gzip -dk file1\n</code></pre>"}, {"location": "content/archives/#gunzip", "title": "GUNZIP", "text": "<pre><code>gunzip datei2.gz\ngunzip -d datei2.gz\n</code></pre>"}, {"location": "content/archives/#bzip2", "title": "BZIP2", "text": "<pre><code>bzip1 file2.bz\nbzip2 -d file2.bz\n</code></pre>"}, {"location": "content/basic_commands/", "title": "Basic Linux Commands", "text": ""}, {"location": "content/basic_commands/#basic-commands", "title": "Basic Commands", "text": ""}, {"location": "content/basic_commands/#history", "title": "HISTORY", "text": "<p>Die History Datei liegt unter</p> <pre><code>echo $HISTFILE\n</code></pre> <p>angucken mit</p> <pre><code>cat $HISTFILE\n</code></pre> <p>oder </p> <pre><code>history\n</code></pre>"}, {"location": "content/basic_commands/#echo", "title": "ECHO", "text": "<p>Mit echo kann man Variablen ausgeben</p> <pre><code>ochse=1\necho $x\necho \"alles ausgeben \\n bricht nicht um\"\necho -e \"test \\n test mit -e wird Zeilenumbruch ausgef\u00fchrt\"\nman echo\n</code></pre>"}, {"location": "content/basic_commands/#umgebugnsvariablen", "title": "Umgebugnsvariablen", "text": "<p>Alle Umgebungsvariablen anzeigen</p> <pre><code>env\n</code></pre> <p>die Path-Varialbe anziegen:</p> <pre><code>echo $PATH\n</code></pre>"}, {"location": "content/basic_commands/#cat", "title": "CAT", "text": "<p>Datei(en) \u00f6ffnen</p> <pre><code>  cat datei\n  cat datei1 datei2 &gt; datei3\n</code></pre>"}, {"location": "content/basic_commands/#less", "title": "LESS", "text": "<p>seitenweise gro\u00dfe Dateien anzeigen</p> <pre><code>  less datei1\n</code></pre> <p>mit q verlassen</p>"}, {"location": "content/basic_commands/#head", "title": "HEAD", "text": "<p>ersten 10 zeilen anzeigen</p> <pre><code>head /etc/passwd\nhead /etc/passwd -n 10\n</code></pre>"}, {"location": "content/basic_commands/#tail", "title": "TAIL", "text": "<p>wie head, nur von hinten</p> <p>Live \u00fcberwachen</p> <pre><code>tail -f /var/log/dpkg.log\n</code></pre>"}, {"location": "content/basic_commands/#nl", "title": "NL", "text": "<p>gibt die Anzahl aller Zeilen aus</p> <pre><code>nl /etc/passwd\n</code></pre> <p>Leerzeilen haben keine Zeilennummer!</p>"}, {"location": "content/basic_commands/#wc", "title": "WC", "text": "<p>Wordcount</p> <pre><code>wc /etc/passwd\n</code></pre> <p>die erte Zahl Zeilenanzhl die zweite zahl: anzal wr\u00f6rter die dirtte zhtl: bytes</p>"}, {"location": "content/basic_commands/#od", "title": "OD", "text": "<p>od - dump files in octal and other formats</p> <pre><code>od -c /etc/passwd\nod /etc/passwd\n</code></pre>"}, {"location": "content/basic_commands/#sort", "title": "SORT", "text": "<p>table.csv 1,Hans 23,Axenmensch 24,peter 2,kanter</p> <pre><code>sort -n table.csv\n</code></pre> <p>Sort sagen, dass wir komma als seperator haben und das wir nach der spalte 2 sortiern wollen (name)</p> <pre><code>sort -t \",\" -k2 table.csv\n</code></pre> <p>-t Trenner -k Key numerisch Dateiname</p>"}, {"location": "content/basic_commands/#uniq", "title": "UNIQ", "text": "<p>uniq l\u00f6scht untereinanderstehende gleiche Zeilen. mit -c kann man sich anzeigen lassen, wie oft die Zeile vor kam.</p> <pre><code>uniq uniq.txt\nuniq -c uniq.txt\nuniq --group uniq.txt\n</code></pre>"}, {"location": "content/basic_commands/#tr", "title": "TR", "text": "<p>translate: ersetzt zeichen durch anderes zeichen ersetze komma durch semikolon:</p> <pre><code>echo \"one,two\" | tr ',' ';'\none;two\n\ncat table.csv | tr ',' ';' &gt; table2.csv\n\necho \"one,two\" | tr 'a-z' 'A-Z'\nONE,TWO\n\n\necho \"one,two\" | tr 'a-z' 'A-Z' | tr ',' ';'\nONE;TWO\n</code></pre> <p>Gro\u00dfe Json-Datei in Zeilen splitten und nach Vorkommen suchen:</p> <pre><code>tr \",\" \"\\n\" &lt; staticfiles.json | grep \"filetosearchfor\"\n</code></pre>"}, {"location": "content/basic_commands/#cut", "title": "CUT", "text": "<p>wie cat, nur mit ausschneiden. -d Delimiter -f Field</p> <pre><code>cut -d ',' -f 2 table2.csv\n\nHans\npeter\nkanter\nAxenmensch\n</code></pre> <p>\u276f cat table2.csv 1,Hans,34 24,peter,22 2,kanter,11 23,Axenmensch,21</p> <p>man kann auch zwei Fields rausschneiden</p> <pre><code>cut -d ',' -f 2,3 table2.csv\n\nHans,34\npeter,22\nkanter,11\nAxenmensch,21\n</code></pre>"}, {"location": "content/basic_commands/#paste", "title": "PASTE", "text": "<p>Dateien zusammenf\u00fchren cat a.txt 1,alfa 2,beute</p> <p>cat b.txt apple bea</p> <p>paste -d ',' a.txt b.txt 1,alfa,apple 2,beute,bea</p>"}, {"location": "content/basic_commands/#sed", "title": "SED", "text": "<p>Inhalte erstezen s = substitute finden ersetzen g global (alles ersetzten)</p> <p>\u00e4ndere alle vorkommen von er durch ra in table2.csv</p> <pre><code>sed 's/er/ra/g' table2.csv\n</code></pre> <p>wenn man die Datei ver\u00e4ndern will, muss man kleines i nutzen</p> <pre><code>sed 's/er/ra/g' -i table2.csv\n</code></pre> <p>Alle Vorkommen in Dateien ersetzen mit ag (Silver Search)</p> <pre><code>ag SearchString -l0 | xargs -0 sed -i 's/SearchString/Replacement/g'\n</code></pre> <p>Alle Vorkommen in Dateien ersetzen mit grep</p> <pre><code>grep -rl SearchString . | xargs sed -i 's/SearchString/Replacement/g'\n</code></pre>"}, {"location": "content/basic_commands/#split", "title": "SPLIT", "text": "<p>eine DAtei in kleinere Dateien zerlegen (20 bytes gro\u00dfe dateien)</p> <pre><code>split -b 20 table2.csv\n</code></pre>"}, {"location": "content/basic_commands/#scp", "title": "SCP", "text": "<p>Auf entfernten Server kopieren (mit ssh-key)</p> <pre><code>scp -i ~/.ssh/id_rsa.pub FILENAME USER@SERVER:/home/USER/FILENAME\n</code></pre>"}, {"location": "content/basic_commands/#dd", "title": "DD", "text": "<p>Bootloader sichern (die ersten 512 Bytes der HD)</p> <pre><code>dd if=/dev/sda of=backup_bootloader bs=512 count=1\n</code></pre>"}, {"location": "content/booting/", "title": "Booten unter Linux", "text": ""}, {"location": "content/booting/#systeminformationen-beim-booten", "title": "Systeminformationen beim Booten", "text": ""}, {"location": "content/booting/#dmesg-kernelinformationen-und-fehler", "title": "dmesg: Kernelinformationen und Fehler:", "text": "<pre><code>dmesg\n</code></pre> <p>nach Fehler filtern:</p> <pre><code>dmesg | grep -i error\n</code></pre>"}, {"location": "content/booting/#jourcnalct-systemd-journal-anfragen", "title": "jourcnalct: systemd Journal anfragen", "text": "<p>Kernelinformationen mit -k</p> <pre><code>journalctl -k\n</code></pre>"}, {"location": "content/contact/", "title": "Contact", "text": "<p>I'm available through:</p> <ul> <li>Email: <code>hello</code> at <code>spielprinzip.com</code></li> </ul>"}, {"location": "content/devices/", "title": "Devices", "text": ""}, {"location": "content/devices/#gerateverzeichnis", "title": "Ger\u00e4teverzeichnis", "text": "<p>Unsere Ger\u00e4te liegen als Dateien in <code>/dev</code>.</p> <pre><code>cd /dev  \nls\n</code></pre>"}, {"location": "content/devices/#hot-plug", "title": "Hot Plug", "text": "<p>Hardware Ger\u00e4t, welches w\u00e4hrend der Laufzeit verwendet werden kann, zb. <code>USB-Stick</code>.</p>"}, {"location": "content/devices/#cold-plug", "title": "Cold Plug", "text": "<p>nur in ausgeschalteten Zustand einh\u00e4ngen kann, z.B. eine <code>IDE Festplatte</code></p>"}, {"location": "content/globbing/", "title": "Globbing", "text": ""}, {"location": "content/globbing/#globbing", "title": "Globbing", "text": "<p>Alle Dateien mit Endung txt. Sternchen steht f\u00fcr beliebig viele Zeichen.</p> <pre><code>ls *.txt\n</code></pre> <p>Fragezeichen steht f\u00fcr genau ein Zeichen (siehe auch regex)</p> <pre><code>ls ?.txt\n</code></pre> <p>nach einer CSV-DAtei suchen, die test oder Test am Anfang des namens hat, und die Endung .csv hat</p> <pre><code>ls [tT]est*.csv\n</code></pre> <p>Ausschluss von Dateien</p> <pre><code>ls test[^1-2].txt\n\nls {tisch, stuhl}*\n</code></pre>"}, {"location": "content/hardware/", "title": "Hardware", "text": ""}, {"location": "content/hardware/#gerate-auflisten", "title": "Ger\u00e4te auflisten", "text": ""}, {"location": "content/hardware/#pci-gerate-auflisten", "title": "PCI Ger\u00e4te auflisten", "text": "<p>mit dem Argument <code>-vv</code> erhalten wir eine Verbose Ansicht.</p> <pre><code>lspci -vv\n</code></pre> <p>mit dem Argument <code>-k</code> kann man sehen, welche Module das Ger\u00e4t verwenden:</p> <pre><code>lspci -k\n</code></pre>"}, {"location": "content/hardware/#usb-gerate", "title": "USB Ger\u00e4te", "text": "<pre><code>lsusb -vv\nlsusb\n</code></pre>"}, {"location": "content/modules/", "title": "Modules", "text": ""}, {"location": "content/modules/#kernelmodule", "title": "Kernelmodule", "text": "<p>Welche Module hat der Kernel aktuell geladen?</p> <pre><code>lsmod\n</code></pre> <p>4-spaltige \u00dcbersicht aller Module (Modulname, Modulgr\u00f6\u00dfe, benutzt von wievielen, benutzt von wem).</p>"}, {"location": "content/modules/#beispiel", "title": "Beispiel:", "text": "<pre><code>lsmod\n[...]\nlpc_ich                28672  0\nsdhci                  81920  1 sdhci_pci\nlibahci                45056  1 ahci\ncrc_itu_t              16384  1 firewire_core\nwmi                    32768  2 wmi_bmof,think_lmi\nvideo                  57344  2 thinkpad_acpi,i915\n</code></pre>"}, {"location": "content/modules/#kernelmodule-informationen", "title": "Kernelmodule Informationen", "text": "<p>Um mehr Informationen \u00fcber ein Modul zu erhalten, gibt es <code>modinfo</code></p> <pre><code>modinfo libahci\n\n\u276f modinfo libahci\nfilename:       /lib/modules/5.15.0-58-generic/kernel/drivers/ata/libahci.ko\nlicense:        GPL\ndescription:    Common AHCI SATA low-level routines\nauthor:         Jeff Garzik\nsrcversion:     D5902F34F56CD0E9B29D99F\ndepends:        \nretpoline:      Y\nintree:         Y\nname:           libahci\nvermagic:       5.15.0-58-generic SMP mod_unload modversions \nsig_id:         PKCS#7\n..\n</code></pre>"}, {"location": "content/modules/#kernelmodule-laden-und-entladen-mit-modprobe", "title": "Kernelmodule laden und entladen mit modprobe", "text": "<p>Um zur Laufzeit Module entladen:</p> <pre><code>sudo modprobe -r ip_tables\n</code></pre> <p>Pr\u00fcfen, ob Module noch l\u00e4uft:</p> <pre><code>lsmod | grep ip_tables\n</code></pre> <p>Modul wieder laden:</p> <pre><code>sudo modprobe ip_tables\n</code></pre>"}, {"location": "content/systemd/", "title": "systemd", "text": ""}, {"location": "content/systemd/#systemd", "title": "systemd", "text": "<p>Ist ein System- und Sitzungs-Manager (Init-System), der f\u00fcr die Verwaltung aller auf dem System laufenden Dienste \u00fcber die gesamte Betriebszeit des Rechners, vom Startvorgang bis zum Herunterfahren, zust\u00e4ndig ist. Prozesse werden dabei immer (soweit m\u00f6glich) parallel gestartet, um den Bootvorgang m\u00f6glichst kurz zu halten.</p>"}, {"location": "content/systemd/#units", "title": "Units", "text": "<p>systemd holt alle seine Vorgaben und Einstellungen zur Verwaltung aus Dateien, in der Terminologie von systemd sind dies \"Units\". Dabei wird zwischen systemweit geltenden Units und solchen, die nur f\u00fcr den jeweiligen Benutzer-Bereich gelten User Units unterschieden. Es gibt diverse Arten von Units wie z.B. Service Units zum Starten von Diensten oder Timer Units zum (wiederholten) Ausf\u00fchren einer Aktion zu einem bestimmten Zeitpunkt.</p> <p>Dateien finden sich in zwei Dateien</p> <p>Unter <code>/etc/systemd/system</code> finden sich die Units, dh. Dateien die gestartet werden.</p> <p>Weitere Dateien: <code>/lib/systemd/system</code></p>"}, {"location": "content/systemd/#systemctl", "title": "systemctl", "text": "<p>Manager f\u00fcr das system.d</p> <p>Alle Units auflisten:</p> <pre><code>systemctl list-units\n</code></pre> <p>Status eines Diestes erfragen</p> <pre><code>systemctl status docker\n</code></pre>"}]}